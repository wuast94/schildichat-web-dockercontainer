name: Build and Push Schildichat Web

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g. 1.11.36-sc.2)'
        required: true
        type: string
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'version.txt'

env:
  # renovate: datasource=github-releases depName=SchildiChat/schildichat-desktop versioning=regex:^v?(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)-(?<compatibility>[a-z]+)(?:\.(?<build>\d+))?(?:\.[a-z]+(?:\.(?<revision>\d+))?)?$
  VERSION: v1.11.36-sc.3
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version
        id: setversion
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "FINAL_VERSION=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "FINAL_VERSION=${VERSION#v}" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHTOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.setversion.outputs.FINAL_VERSION }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Schildichat Web
        run: |
          wget https://github.com/SchildiChat/schildichat-desktop/releases/download/v${{ steps.setversion.outputs.FINAL_VERSION }}/schildichat-web-${{ steps.setversion.outputs.FINAL_VERSION }}.tar.gz
          tar -xf schildichat-web-${{ steps.setversion.outputs.FINAL_VERSION }}.tar.gz
          mv schildichat-web-${{ steps.setversion.outputs.FINAL_VERSION }} schildichat-web
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
